――全般――

●文字コード	UTF-8
●文体	です・ます調
●改行コード	LF(\n, 0x0a)


――階層構造――

■■■	章見出し
■■	項見出し
	※項見出しからタブで区切って、バージョン表記
	※改行してパッケージ名、関数名など
■	小見出し

□	ヘッダ／書式
◇☆C++11	C++11対応

●実行結果

■実行例
■計算量
■参考
★注意
▼	表
■コラム

※コマンドラインなど、実行結果の中でコメントを入れたい場合は先頭に◆を明記


――記述ルール――

●項見出しのつけかた
・「～する」で終わる形で
・概念説明の場合は「～とは」で
・設定やインストールなどは体言止めも可
・「。」は付けない

●章／節／項などの文字数制限
・特にありませんが、だいたい1ページ1500字相当（37文字×43行）で
・1項目4ページ以内に収まるのが理想

●宣言部分のコード
名前空間の定義を一緒に書く

●サンプルコードのルール
インクルードは省略
名前空間は省略した前提で書く
main関数は省略

●文章中の識別子
文章内での識別子は、名前空間を含む完全な名前で書く

●句点(。)ルール
・ソースコードのコメントの行末
⇒文章的なコメントで2文以上になっていない限りは体言止め、句点なし

・名詞や体言の箇条書き
⇒箇条書きでは句点なし

・名詞や体言しか出てこない表
⇒句点なし

・箇条書きの行末にある文
⇒2文以上になる場合に句点を付ける、そうでなければ句点なし

・ソースコードや，（セミ）フォーマルな言葉による説明が続く文
⇒句点あり

・表内の行末にある文
⇒2文以上になる場合に句点を付ける、そうでなければ句点なし

・カッコ内が文になっている場合の文末
⇒句点なし
⇒長いカッコ書きになる場合は脚注にするか、もしくは本文を見直す

●文中のC++のトークンの一種としての記号類の前後に空白文字を入れるべきか
「コンストラクタの後に : を記述し、」 or 
「コンストラクタの後に:を記述し、」
⇒スペース入れる

●箇条書きの口調
⇒「である」調

●コメントの口調
⇒「である」調

●演算子の表記
operator<(), operator[](), operator()()

●参照リンク
・「 link:修飾子 」のような表記とする
・章番号、Tips番号の表記なし
・参照表記の前後にスペースを入れる

●出典の記載
仕様書の記載場所は、以下のように表記する。

spec:1.2.3 p2

前後にスペースを入れる。

※パラグラフの表記をpにしていますが、編集時に一括で「¶」などに直してください

●文字修飾
・太字	<b></b>
・斜体	<i></i>
・文字を小さく	<small></small>
・円記号	<yen>\</yen>

●例外、引数、戻り値などの方針（レビュー依頼より）
・例外送出、引数、戻り値の説明は基本的に入れる
(クラス丸々の解説で、個々を深掘りしない限り)

・箇条書きや節を分けるのではなく、文章中に入れる。6章を参照

●例外送出の方針
・noexceptがついている関数には例外送出の説明の必要なし
・例外送出についての仕様が特に書かれていなければ書かない

●引数、戻り値の方針
・1引数の場合は「第1実引数は…」のような説明は必要なし
・戻り値がない場合は説明の必要なし

●文章中の関数名の表記
・「f()」のように、カッコを付ける


――表記――

※画面キャプチャなどの表記は修正しないよう注意

●記号
句読点	、。
段落頭	全角1字分スペースを入れて始める
段落間	空行は入れない
英数字	半角
記号類（※（）、／、・、！、？、％、＆、“”、＋、－、×、÷など）	全角
区切り（「～をする／しない」など）	／（・／,／、は避ける）

●音引き
※基本は最後に「ー」を付けない。
メンバ
パラメータ（※注: 仮引数 or 実引数 となります！）
コンストラクタ
コンピュータ
サーバ
ポインタ

※以下は、音引きを残すケース
ユーザー

●レイアウト
・URLの前後は1行空ける
・方法が複数とおりある場合は、箇条書きにして見通しがよくなるように
・英単語の前後をスペースで空けない

●単語(右側に合わせる)
当たり前	あたりまえ
予め	あらかじめ
改める	あらためる
いい	よい
幾つ	いくつ
色々	いろいろ
嬉しい	うれしい
大まか	おおまか
お奨め、お薦め	おすすめ
恐らく	おそらく
主な	おもな
且つ	かつ
簡単	かんたん
下さい	ください
詳し	くわし
事	こと
毎	ごと
早速	さっそく
様々	さまざま
更なる	さらなる
更に	さらに
仕組み	しくみ
従って	したがって
したがう	従う
過ぎる	すぎる
づつ	ずつ
既に	すでに
素晴らしい	すばらしい
全て	すべて
すむ	済む
是非	ぜひ
揃える	そろえる
確かに	たしかに
例えば	たとえば
誰	だれ
誰	だれ
付	付き
繋がる	つながる
出来る	できる
通り	とおり（「N通り」の場合は漢字のまま）
とき	時
共に	ともに
無い	ない
何故	なぜ
ばあい	場合
一言	ひとこと
踏まえ	ふまえ
間違	まちが
全く	まったく
面倒	めんどう
貰う	もらう
緩やか	ゆるやか
様な	ような
良く	よく
分かる	わかる
つど	都度
～という事	～ということ
～という物	～というもの
～箇所／～個所／～ヶ所	～ヵ所
～する方がよい	～するほうがよい

●技術用語
※全体としてなるべく日本語に
C++言語	C++
アトリビュート	属性
大域	グローバル
ネームスペース	名前空間
返す	戻す
返り値	戻り値
スマートポインタ	生ポインタ
アクセス指定子	メンバ（アクセス指定子で、特にメンバに対することを強調するとき）
パラメータ	仮引数 or 実引数
多重定義	オーバーロード
パラメータパック	仮引数パック
生配列	組み込み配列

●訳語
argument/parameter	実引数／仮引数
Input iterator	入力イテレータ
Output iterator	出力イテレータ
overload	オーバーロード
prefix	プレフィックス
raw-string-literal	生文字列リテラル
scoped enum	スコープ付き列挙型
suffix	サフィックス

●言い回し
～することができます	～できます
～の方	～のほう／使わなくてすむよう修正


――組版後――

・索引はPDFができたあとに著者が補完する
・円マーク(￥)ではなくバックスラッシュ(＼)を印字する箇所あり


